name: "Build Twilio Functions Service and Publish Artifact"

on:
  workflow_call:
    inputs:
      SERVICE_DIRECTORY:
        type: string
        required: true
        description: The path to the Twilio Functions Service base directory (where package.json is located)
      BUILD_COMMAND:
        type: string
        required: true
        description: The build command
      BUILD_COMMAND_DIRECTORY:
        type: string
        required: false
        description: (Optional) defaults to install directory
      INSTALL_DIRECTORY:
        type: string
        required: false
        default: .
        description: (Optional) The path to the directory to call yarn install in. Defaults to root

jobs:
  build_twilio_functions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ${{ github.repository }}@${{ github.ref_name }}
        uses: actions/checkout@v4
        with:
          path: main

      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
          cache-dependency-path: main/${{ inputs.INSTALL_DIRECTORY }}/yarn.lock

      - name: Install Dependencies
        working-directory: main/${{ inputs.INSTALL_DIRECTORY }}
        run: |
          yarn install --immutable --immutable-cache --mode=skip-build

      - name: Get package.json version
        id: version
        working-directory: main/${{ inputs.SERVICE_DIRECTORY }}
        run: |
          name=$(cat package.json | jq -r .name)
          version=$(cat package.json | jq -r .version)
          echo "NAME=$name" >> "$GITHUB_OUTPUT"
          echo "VERSION=$version" >> "$GITHUB_OUTPUT"

      - name: Build ${{ steps.version.outputs.NAME }}
        working-directory: main
        run: |
          if [ -z "${{ inputs.BUILD_COMMAND_DIRECTORY }}" ]; then
            cd ${{ inputs.INSTALL_DIRECTORY }}
          else
            cd ${{ inputs.BUILD_COMMAND_DIRECTORY }}
          fi
          ${{ inputs.BUILD_COMMAND }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.version.outputs.NAME }}@${{ steps.version.outputs.VERSION }}"
          path: main/${{ inputs.SERVICE_DIRECTORY }}/dist